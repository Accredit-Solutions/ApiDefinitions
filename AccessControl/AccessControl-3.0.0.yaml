---
openapi: 3.0.0
info:
  title: Access Control
  description: "## Accredit API for access control records\n\nFor authorisation, please provide a valid bearer token in your request.\nIf you do not have one, please refer to our \n  [Auth Token Endpoint Documentation](https://app.swaggerhub.com/apis-docs/ACCREDIT/Auth/1.0.0).\n"
  version: 3.0.0
servers:
- url: https://demo2022-uat-api.accredit-solutions.com
security:
- bearerAuth: []
paths:
  /api/accessControl/report:
    get:
      tags:
      - v1.0
      summary: Get access control report
      description: |
        Query access control report data available to the current user.
      parameters:
      - name: pageSize
        description: Set the page size for pagination.
        in: query
        required: false
        style: form
        schema:
          type: integer
          format: int32
          default: 100
          example: 100
      - name: pageNumber
        description: Set the page number for pagination.
        in: query
        required: false
        style: form
        schema:
          type: integer
          format: int32
          default: 1
          example: 1
      - name: barcode
        description: Filter results by badge barcode.
        in: query
        required: false
        style: form
        schema:
          type: string
      - name: areaId
        description: Filter results by Area.
        in: query
        required: false
        style: form
        schema:
          type: string
          format: uuid
      - name: eventId
        description: Filter results by Event.
        in: query
        required: false
        style: form
        schema:
          type: string
          format: uuid
      - name: contactId
        description: Filter results by Contact.
        in: query
        required: false
        style: form
        schema:
          type: string
          format: uuid
      - name: scanStatus
        description: Filter results by their validation result. Refer to the validation results reference data for details.
        in: query
        required: false
        style: form
        schema:
          type: integer
      - name: dateFrom
        description: Filter results by their scan datetime.
        in: query
        required: false
        style: form
        schema:
          type: string
          format: date-time
      - name: dateTo
        description: Filter results by their scan datetime.
        in: query
        required: false
        style: form
        schema:
          type: string
          format: date-time
      - name: createdDate
        description: Filter results by their UTC created datetime.
        in: query
        required: false
        style: form
        schema:
          type: string
          format: date-time
      responses:
        "200":
          description: Access control report details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccessControlReportResponse'
        "401":
          description: "Unauthorised: Access token is missing or invalid"
  /api/accessControl/validationResults:
    post:
      tags:
      - v1.0
      summary: Insert access control tracking results
      description: |
        Allows the insertion of validation results recorded via offline access control validation. 
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidationResultsRequest'
        required: true
      responses:
        "200":
          description: Access control validation results inserted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        "400":
          description: Badge Validation Response With Errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponseWithErrors'
        "401":
          description: "Unauthorised: Access token is missing or invalid"

components:
  schemas:
    GetAccessControlReportResponse:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - $ref: '#/components/schemas/Pagination'
      properties:
        Records:
          type: array
          items:
            $ref: '#/components/schemas/TrackingRecord'

    TrackingRecord:
      type: object
      properties:
        Id:
          type: string
          format: uuid
        Barcode:
          type: string
        Timestamp:
          type: string
          format: date-time
        Direction:
          type: integer
          example: 1
          nullable: true
        Registration:
          type: object
          properties:
            Id:
              type: string
              format: uuid
            RegistrationNumber:
              type: integer
              example: 100
            Contact:
              type: object
              properties:
                Id:
                  type: string
                  format: uuid
            ResponsibleOrganisation:
              $ref: '#/components/schemas/GenericEntityDetails'
            RegistrationSubtype:
              $ref: '#/components/schemas/GenericEntityDetails'
            RegistrationType:
              $ref: '#/components/schemas/GenericEntityDetails'
            EventAccountType:
              $ref: '#/components/schemas/GenericEntityDetails'
            Event:
              $ref: '#/components/schemas/GenericEntityDetails'
        Area:
          $ref: '#/components/schemas/GenericEntityDetails'
        ValidationResult:
          type: object
          properties:
            Code:
              type: string
              example: 1
            Name:
              type: string
              example: Success
        User:
          $ref: '#/components/schemas/GenericEntityDetails'
        Voucher:
          $ref: '#/components/schemas/GenericEntityDetails'
    
    GenericEntityDetails:
      type: object
      properties:
        Id:
          type: string
          format: uuid
        Name:
          type: string

    Pagination:
      type: object
      properties:
        PageNumber:
          type: integer
          example: 1
        PageSize:
          type: integer
          example: 100
        TotalPages:
          type: integer
          example: 10
        TotalCount:
          type: integer
          example: 1000

    ValidationResultsRequest:
      type: array
      items:
        type: object
        required:
        - ValidationResults
        - AreaId
        - Barcode
        - DateTime
        properties:
          ValidationResult:
            type: integer
            example: 1
            description: Code indicating the result of the scan. Refer to ValidationResults reference data for values.
          AreaId:
            type: string
            format: uuid
            description: Identifier of the Access Control Area scanned into.
          Barcode:
            type: string
            description: Barcode assigned to the badge.
          ExternalId:
            type: string
            description: Can be optionally included for tracking purposes.
          DateTime:
            type: string
            format: date-time
            description: Record of when the scan occurred, not the current datetime.
          Direction:
            type: integer
            description: | 
              The direction of the scan for bidirectional scanning.
              1=In, 2=Out
            format: int32
            default: 1
            enum:
              - 1
              - 2

    BaseResponseWithErrors:
      properties:
        HttpStatusCode:
          type: integer
          description: The HTTPStatusCode of the response
          example: 400
        Errors:
          type: array
          description: List of error details; may not be comprehensive if an early exception occurs during request processing.
          items:
            $ref: '#/components/schemas/ErrorDetails'
    ErrorDetails:
      type: object
      properties:
        DataElement:
          type: string
          description: "Specifies the request field that caused the error, if applicable."
        Error:
          type: string
          description: "A descriptive explanation of the error, if available."
        ErrorCode:
          type: string
          description: The Accredit error code. Please refer to our error code documentation for further detail
        ValueProvided:
          type: string
          description: "Specifies the request value that caused the error, if applicable."
    BaseResponse:
      type: object
      properties:
        HttpStatusCode:
          type: integer
          description: The HTTPStatusCode of the response
          example: 200

  responses:
    BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BaseResponseWithErrors'
    UnauthorizedError:
      description: "Unauthorised: Access token is missing or invalid"
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
